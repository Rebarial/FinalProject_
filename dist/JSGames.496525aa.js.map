{"version":3,"sources":["Games/JSGames.js"],"names":["interval9","score","molehole","document","querySelectorAll","startbutton","getElementById","Start","evt","setInterval","Play","addEventListener","endbutton","end","clearInterval","forEach","call","el","ScoreUP","r","check","p","target","innerHTML","Math","floor","random","style","backgroundColor","setTimeout","ClearBack","blockPilot","table","ChangeBlock","id","posY","i","posX","ReArea","alert","window","onload"],"mappings":";AAAA,IAEIA,EAFAC,EAAQ,EACNC,EAAWC,SAASC,iBAAiB,aAEvCC,EAAcF,SAASG,eAAe,UAE1C,SAASC,EAAMC,GACXP,EAAQ,EACRD,EAAYS,YAAYC,EAAM,KAHlCL,EAAYM,iBAAiB,QAASJ,GAOtC,IAAIK,EAAYT,SAASG,eAAe,QAExC,SAASO,EAAIL,GACTM,cAAcd,GAFlBY,EAAUD,iBAAiB,QAASE,GAIpCX,EAASa,QAAQC,KAAKd,EAAS,SAAUe,GACrCA,EAAGN,iBAAiB,QAASO,KAEjC,IAWIC,EAXAC,GAAQ,EACZ,SAASF,EAAQV,GAETa,IAAAA,EAAIlB,SAASG,eAAe,eAC5BL,GAAS,IAAIa,cAAcd,GAC3BQ,EAAIc,QAAUpB,EAASiB,IACnBC,GAAOnB,IAEfmB,GAAQ,EACRC,EAAEE,UAAYtB,EAGlB,SAASS,IACLU,GAAQ,EACPD,EAAGK,KAAKC,MAAoB,GAAdD,KAAKE,UACpBxB,EAASiB,GAAGQ,MAAMC,gBAAkB,OACpCC,WAAWC,EAAW,MAE1B,SAASA,IACL5B,EAASiB,GAAGQ,MAAMC,gBAAkB,OAGxC,IAAMG,EAAa5B,SAASC,iBAAiB,eACzC4B,EAAQ,EAAC,GAAO,GAAM,GAAO,GACrB,GAAO,GAAO,GAAO,GACrB,GAAO,GAAO,GAAO,GACrB,GAAO,GAAM,GAAO,GAUhC,SAASC,EAAYzB,GAEb,IADA0B,IAAAA,EAIAC,EAHIC,EAAE,EAAEA,EAAE,GAAGA,IACT5B,GAAAA,EAAIc,QAAUS,EAAWK,GAAG,CAACF,EAAGE,EAAG,MAGvCC,IAAAA,EAAOH,EAEJG,IADPF,EAAOX,KAAKC,MAAMS,EAAG,GACdG,GAAO,GACVA,GAAM,EAGL,IAAA,IAAID,EAAE,EAAGA,EAAE,EAAEA,IACTJ,EAAa,EAAPG,EAAWC,IAKlBL,EAAkB,EAAPI,EAAWC,GAAGT,MAAMC,gBAAkB,OACjDI,EAAa,EAAPG,EAAWC,IAAG,IALpBJ,EAAa,EAAPG,EAAWC,IAAG,EACpBL,EAAkB,EAAPI,EAAWC,GAAGT,MAAMC,gBAAkB,QAMjDS,EAAW,EAAJD,GAASF,IACXF,EAAMK,EAAW,EAAJD,IAIdJ,EAAMK,EAAW,EAAJD,IAAS,EACtBL,EAAWM,EAAW,EAAJD,GAAOT,MAAMC,gBAAkB,SAJjDI,EAAMK,EAAW,EAAJD,IAAS,EACtBL,EAAWM,EAAW,EAAJD,GAAOT,MAAMC,gBAAkB,SAQxD,IADDR,IAAAA,GAAQ,EACHgB,EAAE,EAAGA,EAAE,GAAGA,IACC,GAAZJ,EAAMI,KAAahB,GAAQ,GAE/BA,GAAQkB,IACZlB,GAAQ,EACH,IAAA,IAAIgB,EAAE,EAAGA,EAAE,GAAGA,IACC,GAAZJ,EAAMI,KAAYhB,GAAQ,GAE9BA,GAAQkB,IAIhB,SAASA,IACLN,EAAQ,EAAC,GAAO,GAAM,GAAO,GACzB,GAAO,GAAO,GAAO,GACrB,GAAO,GAAO,GAAO,GACrB,GAAO,GAAM,GAAO,GACpB,IAAA,IAAII,EAAE,EAAEA,EAAE,GAAGA,IACG,GAAZJ,EAAMI,GAAaL,EAAWK,GAAGT,MAAMC,gBAAkB,OAAcG,EAAWK,GAAGT,MAAMC,gBAAkB,OAErHW,MAAM,WA5DVC,OAAOC,OAAS,WACX,IAAA,IAAIL,EAAE,EAAEA,EAAE,GAAGA,IACG,GAAZJ,EAAMI,KAAYL,EAAWK,GAAGT,MAAMC,gBAAkB,SAGjE1B,EAASa,QAAQC,KAAKe,EAAW,SAAUd,GACvCA,EAAGN,iBAAiB,QAASsB","file":"JSGames.496525aa.js","sourceRoot":"..","sourcesContent":["let score = 0;\r\nconst molehole = document.querySelectorAll(\".molehole\");\r\nlet interval9;\r\nlet startbutton = document.getElementById('start1');\r\nstartbutton.addEventListener(\"click\", Start);\r\nfunction Start(evt) {\r\n    score = 0\r\n    interval9 = setInterval(Play, 2 * 1000)\r\n\r\n    /*Play();*/\r\n}\r\nlet endbutton = document.getElementById('end1');\r\nendbutton.addEventListener(\"click\", end);\r\nfunction end(evt) {\r\n    clearInterval(interval9);\r\n}\r\nmolehole.forEach.call(molehole,function (el){\r\n    el.addEventListener('click', ScoreUP)\r\n})\r\nlet check = false;\r\nfunction ScoreUP(evt){\r\n\r\n    let p = document.getElementById('text_change');\r\n    if (score >= 10){clearInterval(interval9);}\r\n    if (evt.target == molehole[r]){\r\n        if (check) score++;\r\n    }\r\n    check = false;\r\n    p.innerHTML = score;\r\n}\r\nlet r;\r\nfunction Play(){\r\n    check = true;\r\n     r= Math.floor(Math.random()*16);\r\n    molehole[r].style.backgroundColor = \"blue\";\r\n    setTimeout(ClearBack, 2 * 900);\r\n}\r\nfunction ClearBack(){\r\n    molehole[r].style.backgroundColor = \"gray\";\r\n}\r\n\r\nconst blockPilot = document.querySelectorAll(\".blockPilot\");\r\nvar table = [false, true, false, false,\r\n            false, false, false, false,\r\n            false, false, false, false,\r\n            false, true, false, false]\r\n\r\nwindow.onload = function() {\r\n for(let i=0;i<16;i++){\r\n     if (table[i] == true) blockPilot[i].style.backgroundColor = \"blue\";\r\n }\r\n}\r\nmolehole.forEach.call(blockPilot,function (el){\r\n    el.addEventListener('click', ChangeBlock)\r\n})\r\nfunction ChangeBlock(evt) {\r\n    let id;\r\n    for(let i=0;i<16;i++){\r\n        if (evt.target == blockPilot[i]){id=i; break}\r\n    }\r\n    let posY;\r\n    let posX = id;\r\n    posY = Math.floor(id/4);\r\n    while (posX >=4){\r\n        posX-=4;\r\n    }\r\n\r\n    for (let i=0; i<4;i++) {\r\n        if (!table[posY * 4 + i]) {\r\n            table[posY * 4 + i]=true;\r\n            blockPilot[posY * 4 + i].style.backgroundColor = \"blue\";\r\n        }\r\n        else{\r\n            blockPilot[posY * 4 + i].style.backgroundColor = \"gray\";\r\n            table[posY * 4 + i]=false;\r\n        }\r\n        if (posX + i * 4 != id) {\r\n            if (!table[posX + i * 4]) {\r\n                table[posX + i * 4] = true;\r\n                blockPilot[posX + i * 4].style.backgroundColor = \"blue\";\r\n            } else {\r\n                table[posX + i * 4] = false;\r\n                blockPilot[posX + i * 4].style.backgroundColor = \"gray\";\r\n            }\r\n        }\r\n    }\r\n    let check = true;\r\n    for (let i=0; i<16;i++){\r\n        if (table[i] == false) check = false;\r\n    }\r\n    if (check) {ReArea()}\r\n    check = true;\r\n    for (let i=0; i<16;i++){\r\n        if (table[i] == true) check = false;\r\n    }\r\n    if (check) {ReArea()}\r\n\r\n}\r\n\r\nfunction ReArea(){\r\n    table = [false, true, false, false,\r\n        false, false, false, false,\r\n        false, false, false, false,\r\n        false, true, false, false]\r\n    for(let i=0;i<16;i++){\r\n        if (table[i] == true) {blockPilot[i].style.backgroundColor = \"blue\"} else {blockPilot[i].style.backgroundColor = \"gray\"};\r\n    }\r\n    alert(\"Победа!\");\r\n}\r\n\r\n\r\n"]}